<div class="container w-full !max-w-none flex flex-row bg-light-surface-1 dark:!bg-dark-surface-1">
  <div id="new-side-nav" class="min-w-[15rem] max-w-[15rem] hidden md:block relative mt-nav-h"></div>
  <div class="page-wrapper md:max-w-[65rem]">
    <div class="mb-3 md:mb-6 flex flex-row items-center overflow-scroll col-span-4 sm:col-span-8">
      <a href="/" target="_self" class="group flex">
        <span class="body-3 text-nowrap transition text-light-neutral-2 dark:text-dark-neutral-2 group-hover:text-light-neutral-1 group-hover:dark:text-dark-neutral-1">
          Home
        </span>
      </a>
      <svg
        class="mx-0.5 min-w-4 min-h-4"
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M5.52827 3.52827C5.26792 3.78862 5.26792 4.21073 5.52827 4.47108L9.05687 7.99967L5.52827 11.5283C5.26792 11.7886 5.26792 12.2107 5.52827 12.4711C5.78862 12.7314 6.21073 12.7314 6.47108 12.4711L10.4711 8.47108C10.7314 8.21073 10.7314 7.78862 10.4711 7.52827L6.47108 3.52827C6.21073 3.26792 5.78862 3.26792 5.52827 3.52827Z"
          class="fill-light-neutral-2 dark:fill-dark-neutral-2"
        />
      </svg>
      <a href="#" class="group flex">
        <span class="body-3 text-nowrap text-light-neutral-2 dark:text-dark-neutral-2 transition group-hover:text-light-neutral-1 group-hover:dark:text-dark-neutral-1">
          Submit a Request
        </span>
      </a>
    </div>
    <h1 class="heading-1 text-light-neutral-1 dark:text-dark-neutral-1 mb-12">
      {{t 'submit_a_request'}}
    </h1>

    <div id="main-content" class="form">
      <div id="new-request-form"></div>
    </div>
  </div>
</div>
<script type="module">
  import { renderNewRequestForm } from "new-request-form";

  const container = document.getElementById("new-request-form");

  const settings = {{json settings}};

  const props = {
    requestForm: {{json new_request_form}},
    newRequestPath: {{json (page_path 'new_request')}},
    parentId: {{json parent.id}},
    parentIdPath: {{json parent.url}},
    locale: {{json help_center.locale}},
    baseLocale: {{json help_center.base_locale}},
    hasAtMentions: {{json help_center.at_mentions_enabled}},
    userRole: {{json user.role}},
    userId: {{json user.id}},
    brandId: {{json brand.id}},
    organizations: {{json user.organizations}},
    wysiwyg: true,
    answerBotModal: {
      answerBot: {{json answer_bot}},
      hasRequestManagement: {{json help_center.request_management_enabled}},
      isSignedIn: {{json signed_in}},
      helpCenterPath: {{json (page_path 'help_center')}},
      requestsPath: {{json (page_path 'requests')}},
      requestPath: {{json (page_path 'request' id=answer_bot.request_id)}}
    },
  };

  renderNewRequestForm(settings, props, container);
</script>

<script type="module">
  import { renderSideNav, renderMobileMenuNav, sideNav } from "side-nav";

  const container = document.getElementById("new-side-nav");

  const settings = {{json settings}};

  const sideNavData = await sideNav.get();

  // Make sure arguments are correctly typed. 
  renderSideNav(settings, sideNavData, {}, container);

  // Add mobile nav
  const addMobileNav = (sideNavData) => {

    const container = document.getElementById("new-mobile-nav");

    const settings = {{json settings}};

    // Make sure arguments are correctly typed. 
    renderMobileMenuNav(settings, sideNavData, {}, container);
  }

  const mobileMenuButton = document.getElementById("mobile-menu-button");
    mobileMenuButton.addEventListener("click", (e) => {
    // add setTimeout to ensure the mobile nav is added after mobile menu appears on DOM first
    setTimeout(() => addMobileNav(sideNavData), 100);
  });
</script>